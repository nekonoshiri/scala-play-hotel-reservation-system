# https://www.playframework.com/documentation/latest/Configuration

db.default.driver=org.h2.Driver
db.default.url="jdbc:h2:mem:hotel_reservation_system"

# データベースアクセスを行う際に用いる実行コンテキストの設定。
# See: `app/models/DatabaseExecutionContext.scala`
database.dispatcher {
  # Pekko の thread-pool-executor を利用する（データベースアクセスについては通常これを利用しておけば良い）。
  # See: https://pekko.apache.org/docs/pekko/1.0/typed/dispatchers.html
  executor = "thread-pool-executor"
  # アクターが一度に処理するメッセージの最大数（データベースアクセスについては通常は 1 で良い）。
  throughput = 1
  thread-pool-executor {
    # スレッドプールのサイズ。
    # HikariCP を用いる場合、通常は (CPU の物理的なコア数 * 2 + ストレージの実効的なスピンドル数) にしておけば良い。
    # See: https://www.playframework.com/documentation/3.0.x/AccessingAnSQLDatabase
    # See: https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
    fixed-pool-size = 9
  }
}
